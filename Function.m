%Переменные, которые используются в М-файле-функции, являются локальными 
%% Неправильное! задание функции
f = 'x^3 - 1' 
f(7) % ans=1 - указывает на седьмой символ в строке 'x^3 - 1'
%% вычисление интеграла 
h = @(t) t^3; 
syms t % предыдущее определение h заменится на символьное выражение h(t) перед выполнением интегрирования
int(h(t), t) %ans =1/4*t^4 
int(t^3) %ans =1/4*t^4
%% неопределенный интеграл x^2
syms x, int('x^2','x')
%% числовой интеграл
quadl(@(x) log(1 + x.^2).*exp(-x.^2), 0, 1) % ans =  0.153886076719216 
%% дифференциирование
syms x, diff (x^3) % ans = 3*x^2 %% 
f=@(x)x^3;  % то же самое через функцию
diff(f(x))  % ans = 3*x^2 
diff (f(x), 2) % производная второго порядка 
%% Пределы
syms x; limit(sin(x)/x, x, 0) 
%% Бесконечная сумма 1/k - 1/(k+1)  при к=1..n
syms k n; 
symsum(1/k - 1/(k+1), 1, n)
symsum(1/n^2, 1, Inf) % сумма 1/n^2  от  1 до бесконечности 
%% Нажождение минимума функции одной переменной
x = 5.0 : 0.001 : 20.0 ; 
y = 24 - 2* x/3 + x.^2/30 ; 
% xlim(axes1,[5 25]);
axes1 = axes('Parent',figure,'XMinorTick','on'); % Create axes
box(axes1,'on');
grid(axes1,'on');
hold(axes1,'all');
plot(x,y);
[x,y] = fminbnd ( '(24 - 2* x/3 + x.^2/30)', 5, 20)
%% создание функций в тексте программы =========================
sc2=@(x,y)sin(x).^2+cos(y).^2 % либо по старому sc2=inline('sin(x).^2+cos(y).^2') 
f = @(x)x^2 % либо по старому f = inline('x^2','x')

%% создание функций в m файле sc2.m =============================================
%  %текст справки, отображаются при вводе команды help. 
%  function y=sc2(x,y)
%  y=sin(x).^2+cos(y).^2 
%===================================================================
%  sc2(1,2) %обращение к функции sc2
%  type sc2 - вызов листинга функции  sc2
%===================================================================

%% файл функция "polarcoordinates.m" с двумя аргументами ввода и с двумя аргументами вывода: 
% function [r, theta] = polarcoordinates (x, y) 
% r = sqrt(x^2 + y^2); 
% theta = atan2 (x, y); 
%===================================================================
% [r, theta] = polarcoordinates (3, 4) % вызов ф-ции "polarcoordinates"
% r = 5 
% theta = 0.9273 
%====================================================================

%% Поиск минимума функций нескольких переменных f(x, y) = (x^2 + y^2 - 3)^2 + (x^2 + y^2 - 2*x - 3)^2 + 1
% если начальная точка поиска имеет координаты M0 (1; 1)  
[x,y] = meshgrid([-1:1,1:3]); % -1:1 - интервал для х,  1:3 - для y.  Сетка из точек в прямоугольной области с заданным интервалом. 
z = (x^2 + y^2 - 3)^2 + (x^2 + y^2 - 2*x - 3)^2 + 1 ; 
plot3(x,y,z) % смотирим на графике

f= @(x,y)(x^2 + y^2 - 3)^2 + (x^2 + y^2 - 2*x - 3)^2 + 1 ; % вычисляем функцию
xlim([5 25])
%%  nargin - Проверка количества входных переменных
% function s = add(x, y, z) 
% if nargin<2, error('At least two input arguments are required.'), end 
% if nargin==2, s=x+y; 
% else          s=x+y+z; 
% end 

s = sum([varargin{:}]); % формирует список аргументов ввода, разделенных  запятыми. 
%% ghghgh
%cftool  Curve Fitting Tool  - пакет аппроксимации данных
% Data - выбор переменных, которые будут отложены вдоль соответствующих координатных осей 
% Create data set - команда создания массива данных
% Fitting / New fit  - выбрать аппроксимационную зависимость, и применить ее командой Apply
%  help iofun


