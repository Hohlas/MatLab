%% создание массива 
A = [1, 1, 1, 1;  2, 2, 2, 2;  3, 3, 3, 3]  % [строка ; строка ; строка ]
A = zeros(4, 6)% матрица из 00
A = ones(2, 5)*6;% матрица из 6
B = [4, 4, 4, 4;  5, 5, 5, 5;  6, 6, 6, 6]
B(2,3)=2 % (строка,столбец)
A(1:5)=1 % Вектор А [1 1 1 1 1]
B =
     4     4     4     4
     5     5     2     5
     6     6     6     6
% Массив lxN - строчный вектор
% массив Mxl - столбцовый вектор
% MxN - матрица 
[A,B] % горизонтальная конкатенация (объединение) матриц A и B.  ? и B должны иметь одинаковое количество строк
[A;B] % вертикальная конкатенация (объединение) матриц ? и B. ? и ? должны иметь одинаковое число столбцов. 
%% ячейки
C = cell(1,5); % Allocate memory for the array
C{1,1} = pi;                 % double
C{1,2} = 'John Doe';         % char array
C{1,3} = 2 + 4i;             % complex double
C{1,4} = ispc;               % logical
C{1,5} = magic(3)            % double array
%% структуры
sa = struct('data',[1 4 9 16 25], 'description', 'perfect squares') % 1-й способ создания
sa = struct;  % 2-й способ создания
sa.data = [1 4 9 16 25]; 
sa.description = 'perfect squares' ;


%% операции с массивами (стр. 155 -  логические операторы)
x1 = [2 3 4]; 
x2 = [4, 5, 6]; 
x3 = 0:2:10;

u=x1+x2
x1.^2 % возвести в квадрат элементы вектора x1
Trans=x2' % транспонирование
u=x1*Trans;
u=x1.*x2 %поэлементное умножение
u=x1./x2 % поэлементного деления массивов
u=min(x1) %минимальное значение 
u=mean(x1)%среднее  
u=sum(x1)
u=length(x1)%кол-во эл.-тов 
u=sort(x1)%сортировка по убыванию
x1(:,2)=[] %удаляем второй столбец
x4=[4, 4, 4, 4;  5, 5, 5, 5;  6, 6, 6, 6]
x4(1,:)=[] %удаляем первую строку

%% форматы чисел. Задание формата сказывается только на форме вывода чисел. Вычисления все равно происходят в формате двойной точности
format short 1.3333           % 0.0000
format short e 1.3333E+000    % 1.2345E-006
format long 1.333333333333338 %0.000001234500000
format long e 1.333333333333338E+000 % 1.234500000000000E-006
format bank 1.33              % 0.00 

%% типы данных
double % задается вводом числа 
Sym % задается команды sym или syms 
char % Ввод строки, заключенной в 'кавычках' 
function_handle % Ввод символа @
inline % Ввод команды inline



